// <auto-generated />
using System;
using AdsetVeiculos.API.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdsetVeiculos.API.Migrations
{
    [DbContext(typeof(VeiculosDbContext))]
    partial class VeiculosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdsetVeiculos.API.Domain.Entities.Opcional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Opcionais");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Ar Condicionado"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Alarme"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Airbag"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Freio ABS"
                        });
                });

            modelBuilder.Entity("AdsetVeiculos.API.Domain.Entities.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("AdsetVeiculos.API.Domain.Entities.VeiculoFoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagemBase64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeArquivo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId", "Ordem")
                        .IsUnique();

                    b.ToTable("VeiculosFotos");
                });

            modelBuilder.Entity("AdsetVeiculos.API.Domain.Entities.VeiculoOpcional", b =>
                {
                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.Property<int>("OpcionalId")
                        .HasColumnType("int");

                    b.HasKey("VeiculoId", "OpcionalId");

                    b.HasIndex("OpcionalId");

                    b.ToTable("VeiculosOpcionais");
                });

            modelBuilder.Entity("AdsetVeiculos.API.Domain.Entities.VeiculoPacotePortal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TipoPacote")
                        .HasColumnType("int");

                    b.Property<int>("TipoPortal")
                        .HasColumnType("int");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId", "TipoPortal")
                        .IsUnique();

                    b.ToTable("VeiculosPacotesPortais");
                });

            modelBuilder.Entity("AdsetVeiculos.API.Domain.Entities.VeiculoFoto", b =>
                {
                    b.HasOne("AdsetVeiculos.API.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany("Fotos")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("AdsetVeiculos.API.Domain.Entities.VeiculoOpcional", b =>
                {
                    b.HasOne("AdsetVeiculos.API.Domain.Entities.Opcional", "Opcional")
                        .WithMany("VeiculosOpcionais")
                        .HasForeignKey("OpcionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdsetVeiculos.API.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany("Opcionais")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Opcional");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("AdsetVeiculos.API.Domain.Entities.VeiculoPacotePortal", b =>
                {
                    b.HasOne("AdsetVeiculos.API.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany("PacotesPortais")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("AdsetVeiculos.API.Domain.Entities.Opcional", b =>
                {
                    b.Navigation("VeiculosOpcionais");
                });

            modelBuilder.Entity("AdsetVeiculos.API.Domain.Entities.Veiculo", b =>
                {
                    b.Navigation("Fotos");

                    b.Navigation("Opcionais");

                    b.Navigation("PacotesPortais");
                });
#pragma warning restore 612, 618
        }
    }
}
